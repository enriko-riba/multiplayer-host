name: Publish to NuGet

on:
  push:
    branches: [ release\* ]
 
    branches: [ release, release1.0.0 ]

jobs:  
  publish-nuget:
    runs-on: ubuntu-latest
    name: NuGet
    steps:
    
    - name: Git checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.100

    - name: Setup .NET Core 3.1
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.100

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: '5.x'

    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7      

    - name: Output version values 
      run: |
        echo "Major: ${{ steps.gitversion.outputs.Major }}"
        echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
        echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
        echo "PreReleaseTag: ${{ steps.gitversion.outputs.PreReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.PreReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ steps.gitversion.outputs.PreReleaseLabel }}"
        echo "PreReleaseNumber: ${{ steps.gitversion.outputs.PreReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.WeightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ steps.gitversion.outputs.BuildMetaData }}"
        echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.BuildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ steps.gitversion.outputs.FullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.SemVer }}"
        echo "LegacySemVer: ${{ steps.gitversion.outputs.LegacySemVer }}"
        echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.LegacySemVerPadded }}"
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.AssemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.AssemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.InformationalVersion }}"
        echo "BranchName: ${{ steps.gitversion.outputs.BranchName }}"
        echo "Sha: ${{ steps.gitversion.outputs.Sha }}"
        echo "ShortSha: ${{ steps.gitversion.outputs.ShortSha }}"
        echo "NuGetVersionV2: ${{ steps.gitversion.outputs.NuGetVersionV2 }}"
        echo "NuGetVersion: ${{ steps.gitversion.outputs.NuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.NuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.NuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ steps.gitversion.outputs.VersionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }}"
        echo "CommitDate: ${{ steps.gitversion.outputs.CommitDate }}"

    - name: Install dependencies
      run: dotnet restore host/Host.csproj
    - name: Build
      run: dotnet build host/Host.csproj --configuration Release --no-restore

    - name: Pack with dotnet
      run: dotnet pack host/Host.csproj --output nuget-packages --configuration Release -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }}-${{ steps.gitversion.outputs.CommitsSinceVersionSourcePadded }} 

    - name: Push with dotnet
      run: dotnet nuget push nuget-packages/*.nupkg --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json

