name: Publish to NuGet

on:
  push:
    branches: [ release ]
  workflow_dispatch:  # Allow manual triggering

jobs:  
  publish-nuget:
    runs-on: ubuntu-latest
    name: NuGet Publish
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Git checkout
      uses: actions/checkout@v4    # Updated from v2
      with:
        fetch-depth: 0

    - name: Setup .NET 9
      uses: actions/setup-dotnet@v4    # Updated from v1
      with:
        dotnet-version: 9.0.x
        cache: true    # Enable SDK caching

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.11.0    # Updated from v0.9.7
      with:
        versionSpec: '5.x'

    - name: Use GitVersion
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.11.0    # Updated from v0.9.7

    # Simplified version output - keep only essential ones
    - name: Output version info
      run: |
        echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
        echo "NuGet Version: ${{ steps.gitversion.outputs.NuGetVersion }}"
        echo "Full Build Version: ${{ steps.gitversion.outputs.FullBuildMetaData }}"

    - name: Restore dependencies
      run: |
        dotnet restore host/Host.csproj
        dotnet restore reference-game/ReferenceGame.csproj

    - name: Build
      run: dotnet build --configuration Release --no-restore

    # Added testing step
    - name: Test
      run: dotnet test --configuration Release --no-build --verbosity normal

    - name: Pack with dotnet
      run: dotnet pack host/Host.csproj --output nuget-packages --configuration Release --no-build -p:PackageVersion=${{ steps.gitversion.outputs.NuGetVersion }}

    # Added package verification
    - name: Verify package
      run: dotnet nuget verify nuget-packages/*.nupkg

    # Added retry logic for push
    - name: Push to NuGet
      uses: nuget/setup-nuget@v2
      with:
        nuget-api-key: ${{ secrets.NUGET_KEY }}
        nuget-version: 'latest'
    - run: |
        for package in nuget-packages/*.nupkg; do
          dotnet nuget push "$package" --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_KEY }} --skip-duplicate
        done

    # Added artifacts archiving
    - name: Archive NuGet packages
      uses: actions/upload-artifact@v4
      with:
        name: nuget-packages
        path: nuget-packages/*.nupkg
        retention-days: 30
